<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button1.Text" xml:space="preserve">
    <value>三相上电压正向电流(58V)</value>
  </data>
  <data name="button2.Text" xml:space="preserve">
    <value>三相上电压正向电流(100V)</value>
  </data>
  <data name="button3.Text" xml:space="preserve">
    <value>三相上电压正向电流(220V)</value>
  </data>
  <data name="button4.Text" xml:space="preserve">
    <value>三相上电压(58V)</value>
  </data>
  <data name="button5.Text" xml:space="preserve">
    <value>三相上电压(100V)</value>
  </data>
  <data name="button6.Text" xml:space="preserve">
    <value>三相上电压(220V)</value>
  </data>
  <data name="button7.Text" xml:space="preserve">
    <value>三相上电压反向电流(58V)</value>
  </data>
  <data name="button8.Text" xml:space="preserve">
    <value>三相上电压反向电流(100V)</value>
  </data>
  <data name="button9.Text" xml:space="preserve">
    <value>三相上电压反向电流(220V)</value>
  </data>
  <data name="button10.Text" xml:space="preserve">
    <value>单A相上电压反向电流(58V)</value>
  </data>
  <data name="button11.Text" xml:space="preserve">
    <value>单A相上电压反向电流(100V)</value>
  </data>
  <data name="button12.Text" xml:space="preserve">
    <value>单A相上电压反向电流(220V)</value>
  </data>
  <data name="button13.Text" xml:space="preserve">
    <value>单A相上电压(58V)</value>
  </data>
  <data name="button14.Text" xml:space="preserve">
    <value>单A相上电压(100V)</value>
  </data>
  <data name="button15.Text" xml:space="preserve">
    <value>单A相上电压(220V)</value>
  </data>
  <data name="button16.Text" xml:space="preserve">
    <value>单A相上电压正向电流(58V)</value>
  </data>
  <data name="button17.Text" xml:space="preserve">
    <value>单A相上电压正向电流(100V)</value>
  </data>
  <data name="button18.Text" xml:space="preserve">
    <value>单A相上电压正向电流(220V)</value>
  </data>
  <data name="button19.Text" xml:space="preserve">
    <value>单B相上电压反向电流(58V)</value>
  </data>
  <data name="button20.Text" xml:space="preserve">
    <value>单B相上电压正向电流(58V)</value>
  </data>
  <data name="button21.Text" xml:space="preserve">
    <value>单B相上电压反向电流(100V)</value>
  </data>
  <data name="button22.Text" xml:space="preserve">
    <value>单B相上电压正向电流(100V)</value>
  </data>
  <data name="button23.Text" xml:space="preserve">
    <value>单B相上电压反向电流(220V)</value>
  </data>
  <data name="button24.Text" xml:space="preserve">
    <value>单B相上电压正向电流(220V)</value>
  </data>
  <data name="button25.Text" xml:space="preserve">
    <value>单B相上电压(58V)</value>
  </data>
  <data name="button26.Text" xml:space="preserve">
    <value>单B相上电压(100V)</value>
  </data>
  <data name="button27.Text" xml:space="preserve">
    <value>单B相上电压(220V)</value>
  </data>
  <data name="button28.Text" xml:space="preserve">
    <value>单C相上电压反向电流(58V)</value>
  </data>
  <data name="button29.Text" xml:space="preserve">
    <value>单C相上电压正向电流(58V)</value>
  </data>
  <data name="button30.Text" xml:space="preserve">
    <value>单C相上电压反向电流(100V)</value>
  </data>
  <data name="button31.Text" xml:space="preserve">
    <value>单C相上电压正向电流(100V)</value>
  </data>
  <data name="button32.Text" xml:space="preserve">
    <value>单C相上电压反向电流(220V)</value>
  </data>
  <data name="button33.Text" xml:space="preserve">
    <value>单C相上电压正向电流(220V)</value>
  </data>
  <data name="button34.Text" xml:space="preserve">
    <value>单C相上电压(58V)</value>
  </data>
  <data name="button35.Text" xml:space="preserve">
    <value>单C相上电压(100V)</value>
  </data>
  <data name="button36.Text" xml:space="preserve">
    <value>单C相上电压(220V)</value>
  </data>
  <data name="groupBox1.Text" xml:space="preserve">
    <value>三相上电</value>
  </data>
  <data name="groupBox2.Text" xml:space="preserve">
    <value>单A相上电</value>
  </data>
  <data name="groupBox3.Text" xml:space="preserve">
    <value>单B相上电</value>
  </data>
  <data name="groupBox4.Text" xml:space="preserve">
    <value>单C相上电</value>
  </data>
  <data name="groupBox5.Text" xml:space="preserve">
    <value>当前电表状态</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>67, 15</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>直流电压：</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>64, 15</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>C相电压：</value>
  </data>
  <data name="label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>63, 15</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>B相电压：</value>
  </data>
  <data name="label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>62, 15</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>A相电压：</value>
  </data>
  <data name="label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 15</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>当前秒信号通道：</value>
  </data>
  <data name="label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 15</value>
  </data>
  <data name="label1.Text" xml:space="preserve">
    <value>当前485(1)通道：</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAAAAADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAEAAAAAAA
        AAAAAAAAAAD/AAO24gACoMgAQID/AHWi/wBAfv8APcKxAMjIyAC4uLgAbeH+AAPK/AABepgAgICAAC9z
        /wD///8ADd3d3d0N3d3d3dDd3d3d0A0AAAANDQAAAADQ0AAAANANCIiIDQ0IiIiA0NCIiIDQDQiIjw0N
        CIiI8NDQiIjw0A0IiIAAAAAAAAAAAAiI8NANAAAAAAAAAAAAAAAAAADQDd3d0AIzMzMzMzMwDd3d0AAA
        AAAKAAC7sAALMAAAAAAN3d3QCgEQu7IiKzAN3d3QDQDdAAoAALuwAAswDdAA0A3d3dAKu7u7u7u7MA3d
        3dAAAAAAAAAAAAAAAAAAAAAADd3d0AAAAAAAAAAADd3d0A0AAAAKu7u7u7u7MAAAANANCIiACgAAAAAA
        ADAIiIDQDQiIgAoAAAAAAAAwCIjw0A0IiIAKAG7u7u4AMAiI8NANAAAACgBURET+ADAAAADQDd3d0AoA
        VERETgAwDd3d0AAAAAAKAFRERP4AMAAAAAAN3d3QCgBVVVX2ADAN3d3QDQDdAAoAAAAAAAAwDdAA0A3d
        3dAKAAAAAAAAMA3d3dAAAAAACqqqqqqqqiAAAAAADd3d0AAAAAAAAAAADd3d0A0AAAAAAAAAAAAAAAAA
        ANANCIiIDQ0IiIiA0NCIiIDQDQiIjw0NCIiI8NDQiIjw0A0IiI8NDQiIiPDQ0IiI8NANAAAADQ0AAAAA
        0NAAAADQDd3d3d0N3d3d3dDd3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>附加命令</value>
  </data>
</root>